// Code generated by MockGen. DO NOT EDIT.
// Source: ./common/twilio.go

// Package mock_common is a generated GoMock package.
package mock_common

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSMSService is a mock of SMSService interface
type MockSMSService struct {
	ctrl     *gomock.Controller
	recorder *MockSMSServiceMockRecorder
}

// MockSMSServiceMockRecorder is the mock recorder for MockSMSService
type MockSMSServiceMockRecorder struct {
	mock *MockSMSService
}

// NewMockSMSService creates a new mock instance
func NewMockSMSService(ctrl *gomock.Controller) *MockSMSService {
	mock := &MockSMSService{ctrl: ctrl}
	mock.recorder = &MockSMSServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSMSService) EXPECT() *MockSMSServiceMockRecorder {
	return m.recorder
}

// SendSMS mocks base method
func (m *MockSMSService) SendSMS(ctx context.Context, phoneNumber, smsContent string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendSMS", ctx, phoneNumber, smsContent)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendSMS indicates an expected call of SendSMS
func (mr *MockSMSServiceMockRecorder) SendSMS(ctx, phoneNumber, smsContent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendSMS", reflect.TypeOf((*MockSMSService)(nil).SendSMS), ctx, phoneNumber, smsContent)
}
